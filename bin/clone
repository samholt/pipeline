#!/usr/bin/env node

var fs = require("fs"),
    exec = require("child_process").execSync,
    d3 = require("d3"),
    request = require("request");

try {
  fs.mkdirSync("posts");
} catch (e) {
  // posts folder already exists
}

request("https://raw.githubusercontent.com/distillpub/posts/master/posts.csv", function(error, response, body) {
  if (!error && response.statusCode == 200) {
    let posts = d3.csvParse(body, (r) => {
      return {
        doiSuffix: +r.doiSuffix,
        distillPath: r.distillPath.trim(),
        githubPath: r.githubPath.trim(),
        publishedDate: d3.timeParse("%Y/%m/%d")(r.publishedDate.trim())
      }
    });
    fs.writeFileSync("posts/posts.json", JSON.stringify(posts), "utf8")
    clone(posts);
  } else {
    console.error(error);
  }
});

function clone(posts) {
  posts.forEach(function(post) {
    var repoPath = "posts/" + post.githubPath;
    try {
      // If repo already exists, just pull it
      fs.accessSync(repoPath, fs.F_OK);
      console.log("Pulling " + post.githubPath);
      exec("git -C " + repoPath + " pull")
    } catch (e) {
      // Repo doesn't exist locally, so let's clone it
      exec("git clone --depth 1 " + "https://github.com/" + post.githubPath + ".git" + " " + repoPath);
    }
  });
}
